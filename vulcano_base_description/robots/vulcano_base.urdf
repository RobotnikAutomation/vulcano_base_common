<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from vulcano_base.urdf.xacro        | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="vulcano_base" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- ***************** -->
  <!-- Imported elements -->
  <!-- ***************** -->
  <!-- First we import all posible elements defined in the urdf.xacro files. All these elements are defined as macro:xacros -->
  <!-- Import vulcano base elements -->
  <!-- ros control plugin -->
  <gazebo reference="base_footprint">
    <material>Gazebo/Green</material>
  </gazebo>
  <!-- Import vulcano wheels -->
  <!-- Wheels -->
  <!-- in kg-->
  <!-- Import all available sensors -->
  <!-- This file unifies all sensors that can be used on simulation, defined as xacro:macros -->
  <!-- Axis p5512 -->
  <!-- Axis m5013 -->
  <!-- Fotonic -->
  <!-- GPS -->
  <!-- Hokuyo urg04lx -->
  <!-- Hokuyo utm30lx -->
  <!-- Hokuyo ust10lx -->
  <!-- Imu -->
  <!-- Kinect -->
  <!-- Asus Xtion PRO -->
  <!-- Xacro properties -->
  <!-- xacro:property name="M_SCALE" value="0.001"/ -->
  z
  
  <!-- Hokuyo 3d -->
  <!-- Sick s3000 -->
  <!-- KinectV2 -->
  <!-- Orbbec Astra -->
  <!-- Xacro properties -->
  <!-- RGB sensor - cam -->
  <!-- IR sensor - depth -->
  <!-- ***************** -->
  <!-- Global parameters -->
  <!-- ***************** -->
  <!-- Wheel parameters -->
  <!-- x,y,z in translation from base_link to the center of the wheel -->
  <!-- Flag to select the high or low quality model -->
  <!-- *************** -->
  <!-- Robots Elements -->
  <!-- *************** -->
  <!-- Here we create the robot elements using the xacro:macros imported at the beggining of this file -->
  <!-- Vulcano base -->
  <!-- Robot mechanical and motor parameters -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  <xacro:property name="wheel_width" value="0.075"/>
  <!-- BASE FOOTPRINT -->
  <link name="base_footprint">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
  </link>
  <joint name="base_footprint_joint" type="fixed">
    <!-- origin xyz="0 0 ${wheel_radius}" rpy="0 0 0" / -->
    <!-- ${wheel_radius} property must be defined inside wheel description -->
    <origin rpy="0 0 0" xyz="0 0 0.15"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>
  <!-- BASE_LINK -->
  <link name="base_link">
    <inertial>
      <mass value="25.0"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.391" ixy="0.004" ixz="0.0" iyy="6.853" iyz="0.0" izz="6.125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://vulcano_base_description/meshes/bases/vulcano_base_chassis.dae"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0 " xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://vulcano_base_description/meshes/bases/vulcano_base_chassis.dae"/>
      </geometry>
    </collision>
  </link>
  <link name="cabinet_link">
    <inertial>
      <mass value="15.0"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.391" ixy="0.004" ixz="0.0" iyy="6.853" iyz="0.0" izz="6.125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://vulcano_base_description/meshes/bases/vulcano_base_cabinet.dae"/>
      </geometry>
      <material name="darkgrey">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0 " xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://vulcano_base_description/meshes/bases/vulcano_base_cabinet.dae"/>
      </geometry>
    </collision>
  </link>
  <joint name="cabinet_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="cabinet_link"/>
  </joint>
  <!-- Gazebo ros control pluggins -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="ros_control">
      <robotNamespace>/vulcano_base</robotNamespace>
      <robotParam>robot_description</robotParam>
      <controlPeriod>0.001</controlPeriod>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>
  <!-- Gazebo omni steering plugin -->
  <!-- xacro:omni_steering/ -->
  <!-- xacro:motor_wheel name="front_right" parent="base_link" reflect="false" hq="true">
		<origin xyz="${wheel_offset_x} -${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
	</xacro:motor_wheel -->
  <!-- xacro:omni_wheel name="front_left" parent="base_link" reflect="true" hq="true">
		<origin xyz="${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
	</xacro:omni_wheel>
  
	<xacro:omni_wheel name="back_left" parent="base_link" reflect="false" hq="true">
		<origin xyz="-${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
	</xacro:omni_wheel>
  
	<xacro:omni_wheel name="back_right" parent="base_link" reflect="true" hq="true">
		<origin xyz="-${wheel_offset_x} -${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
	</xacro:omni_wheel -->
  <!-- SENSORS -->
  <!-- Hokuyo laser sensors can be parametized with min_angle and max_angle e.g: -->
  <!--xacro:sensor_hokuyo_utm30lx name="hokuyo_base" parent="base_link" min_angle="2.35" max_angle="-2.35"-->
  <joint name="hokuyo_base_laser_joint" type="fixed">
    <!-- FRONT MOUNT  -->
    <!-- origin xyz="0.29 0 0.1" -->
    <!-- TOP MOUNT -->
    <!-- origin xyz="0.0 0.0 0.325"-->
    <origin rpy="0 0 0" xyz="0.0 0.0 0.33"/>
    <parent link="base_link"/>
    <child link="hokuyo_base_laser_link"/>
  </joint>
  <link name="hokuyo_base_laser_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/hokuyo_utm_30lx.dae"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <!-- Hokuyo sensor for simulation -->
  <gazebo reference="hokuyo_base_laser_link">
    <sensor name="hokuyo_base_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>30</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1081</samples>
            <resolution>1</resolution>
            <min_angle>2.35</min_angle>
            <max_angle>-2.35</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>hokuyo_base/scan</topicName>
        <frameName>hokuyo_base_laser_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!--
	<xacro:sensor_hokuyo_urg04lx name="hokuyo1" parent="base_link">
		<origin xyz="-0.1 0.0 0.33" rpy="0 0 0"/>
	</xacro:sensor_hokuyo_urg04lx>
-->
  <!--
  <xacro:sensor_hokuyo_ust10lx name="hokuyo_base" parent="base_link">
		<origin xyz="0.0 0.0 0.33" rpy="0 0 0"/>
	</xacro:sensor_hokuyo_ust10lx>
-->
  <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <!--
	      <origin xyz="0.180 0.0 0.270"/>
-->
    <origin rpy="0 0.261799387799 0" xyz="0.19 0 0.17"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>
  <link name="camera_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.03 0.0 -0.3"/>
      <mass value="0.1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0.03 0.0 -0.3"/>
      <!-- to center the axis model -->
      <material name="axis_color">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/axis_p5512.stl" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.03 0.0 -0.3"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/axis_p5512.stl" scale="1.0 1.0 1.0"/>
      </geometry>
    </collision>
  </link>
  <joint name="joint_camera_pan" type="continuous">
    <axis xyz="0 0 1"/>
    <origin xyz="0.0 0.0 0.1"/>
    <parent link="camera_link"/>
    <child link="camera_pan_link"/>
    <limit effort="100.0" lower="-3.1416" upper="3.1416" velocity="100.0"/>
    <joint_properties damping="0.1" friction="{ptz_joint_friction}"/>
  </joint>
  <link name="camera_pan_link">
    <inertial>
      <mass value="0.1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
    </inertial>
  </link>
  <transmission name="camera_pan_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_camera_pan">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="pan_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1.0</mechanicalReduction>
    </actuator>
  </transmission>
  <joint name="joint_camera_tilt" type="continuous">
    <axis xyz="0 1 0"/>
    <origin xyz="0.0 0.0 0.0"/>
    <parent link="camera_pan_link"/>
    <child link="camera_tilt_link"/>
    <limit effort="100.0" lower="-1.5708" upper="1.5708" velocity="100.0"/>
    <joint_properties damping="0.1" friction="{ptz_joint_friction}"/>
  </joint>
  <link name="camera_tilt_link">
    <inertial>
      <mass value="0.1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
    </inertial>
  </link>
  <transmission name="camera_tilt_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint_camera_tilt">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="tilt_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1.0</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="camera_link">
    <material>Gazebo/FlatBlack</material>
  </gazebo>
  <!-- Axis sensor for simulation -->
  <gazebo reference="camera_tilt_link">
    <sensor name="camera1" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.03</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_tilt_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="imu_joint" type="fixed">
    <axis xyz="1 0 0"/>
    <!--origin xyz="0 0 0.2825"/-->
    <origin rpy="0 0 0" xyz="-0.18 0.0 0.170"/>
    <parent link="base_link"/>
    <child link="imu_link"/>
  </joint>
  <link name="imu_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size=".001 .001 .001"/>
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libgazebo_ros_imu.so" name="ros_imu">
      <topicName>imu_data</topicName>
      <bodyName>imu_link</bodyName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.005</gaussianNoise>
    </plugin>
  </gazebo>
  <!--
	<xacro:sensor_kinect name="kinect" parent="base_link">
		<origin xyz="0.325 0.0 0.16" rpy="0 0 0"/> 
	</xacro:sensor_kinect>  
-->
  <!--
	<xacro:sensor_fotonic name="fotonic" parent="base_link">
		<origin xyz="0.3 0.0 0.24" rpy="0 0 0"/> 
	</xacro:sensor_fotonic>  
-->
</robot>

